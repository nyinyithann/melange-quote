// Generated by Melange

import * as Belt_Array from "melange/lib/es6/belt_Array.mjs";
import * as Caml_array from "melange/lib/es6/caml_array.mjs";
import * as Restorative from "../restorative/Restorative.js";

var initialState_quotes = [];

var initialState = {
  loading: false,
  error: "",
  quotes: initialState_quotes
};

function add(quote, state) {
  state.quotes.push({
        id: quote.id,
        quote: quote.quote,
        author: quote.author,
        contributer: {
          id: quote.contributerId,
          name: ""
        }
      });
  return {
          loading: false,
          error: "",
          quotes: state.quotes
        };
}

function $$delete(id, state) {
  return {
          loading: false,
          error: "",
          quotes: Belt_Array.keep(state.quotes, (function (x) {
                  return x.id !== id;
                }))
        };
}

function update(quote, state) {
  var i = Belt_Array.getIndexBy(state.quotes, (function (x) {
          return x.id === quote.id;
        }));
  if (i !== undefined) {
    Caml_array.set(state.quotes, i, {
          id: quote.id,
          quote: quote.quote,
          author: quote.author,
          contributer: {
            id: quote.contributerId,
            name: ""
          }
        });
  }
  return {
          loading: false,
          error: "",
          quotes: state.quotes
        };
}

function load(quotes) {
  return {
          loading: false,
          error: "",
          quotes: quotes.items
        };
}

function reducer(state, action) {
  if (typeof action === "number") {
    return {
            loading: true,
            error: state.error,
            quotes: state.quotes
          };
  }
  switch (action.TAG | 0) {
    case /* AddQuote */0 :
        return add(action._0, state);
    case /* DeleteQuote */1 :
        return $$delete(action._0, state);
    case /* UpdateQuote */2 :
        return update(action._0, state);
    case /* LoadQuotes */3 :
        return load(action._0);
    case /* Error */4 :
        return {
                loading: state.loading,
                error: action._0,
                quotes: state.quotes
              };
    
  }
}

var store = Restorative.createStore(initialState, reducer);

export {
  initialState ,
  add ,
  $$delete ,
  update ,
  load ,
  reducer ,
  store ,
}
/* store Not a pure module */
